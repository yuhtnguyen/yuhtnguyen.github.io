import React, { useState } from 'react'
import { Card, Typography, Steps, Button, Alert, Space, Divider } from 'antd'
import { ApiOutlined, KeyOutlined, SettingOutlined } from '@ant-design/icons'

const { Title, Paragraph, Text, Link } = Typography

const AISetupGuide = () => {
  const [currentStep, setCurrentStep] = useState(0)

  const steps = [
    {
      title: 'Choose AI Provider',
      content: 'Ch·ªçn nh√† cung c·∫•p AI',
      icon: <ApiOutlined />
    },
    {
      title: 'Get API Key',
      content: 'L·∫•y API Key',
      icon: <KeyOutlined />
    },
    {
      title: 'Configure',
      content: 'C·∫•u h√¨nh v√†o code',
      icon: <SettingOutlined />
    }
  ]

  return (
    <Card style={{ maxWidth: 800, margin: '20px auto' }}>
      <Title level={2}>ü§ñ H∆∞·ªõng d·∫´n setup AI cho ChatBot</Title>
      
      <Alert
        message="ChatBot hi·ªán ƒëang ho·∫°t ƒë·ªông v·ªõi Local AI"
        description="ƒê·ªÉ c√≥ tr·∫£i nghi·ªám AI th√¥ng minh h∆°n, b·∫°n c√≥ th·ªÉ setup API keys cho Gemini (mi·ªÖn ph√≠) ho·∫∑c OpenAI."
        type="info"
        showIcon
        style={{ marginBottom: 24 }}
      />

      <Steps current={currentStep} items={steps} />

      <div style={{ marginTop: 24 }}>
        {currentStep === 0 && (
          <div>
            <Title level={4}>B∆∞·ªõc 1: Ch·ªçn AI Provider</Title>
            
            <Space direction="vertical" size="large" style={{ width: '100%' }}>
              <Card size="small" title="üî• Google Gemini (Khuy·∫øn ngh·ªã)">
                <Paragraph>
                  <Text strong>‚úÖ Mi·ªÖn ph√≠</Text><br />
                  ‚úÖ Ch·∫•t l∆∞·ª£ng t·ªët<br />
                  ‚úÖ D·ªÖ setup<br />
                  ‚úÖ C√≥ quota h·∫•p d·∫´n
                </Paragraph>
                <Button type="primary" href="https://makersuite.google.com/app/apikey" target="_blank">
                  Get Gemini API Key
                </Button>
              </Card>

              <Card size="small" title="üíé OpenAI GPT">
                <Paragraph>
                  <Text type="warning">üí∞ C√≥ ph√≠ (pay-per-use)</Text><br />
                  ‚úÖ Ch·∫•t l∆∞·ª£ng cao nh·∫•t<br />
                  ‚úÖ Nhi·ªÅu model options<br />
                  ‚úÖ Stable v√† reliable
                </Paragraph>
                <Button href="https://platform.openai.com/api-keys" target="_blank">
                  Get OpenAI API Key
                </Button>
              </Card>
            </Space>
          </div>
        )}

        {currentStep === 1 && (
          <div>
            <Title level={4}>B∆∞·ªõc 2: L·∫•y API Key</Title>
            
            <Title level={5}>Cho Google Gemini (Mi·ªÖn ph√≠):</Title>
            <ol>
              <li>Truy c·∫≠p <Link href="https://makersuite.google.com/app/apikey" target="_blank">Google AI Studio</Link></li>
              <li>ƒêƒÉng nh·∫≠p v·ªõi Google account</li>
              <li>Click "Create API Key"</li>
              <li>Copy API key v√† l∆∞u l·∫°i</li>
            </ol>

            <Title level={5}>Cho OpenAI (C√≥ ph√≠):</Title>
            <ol>
              <li>Truy c·∫≠p <Link href="https://platform.openai.com/api-keys" target="_blank">OpenAI Platform</Link></li>
              <li>T·∫°o account v√† verify</li>
              <li>Add payment method</li>
              <li>Create new API key</li>
              <li>Copy v√† l∆∞u key</li>
            </ol>
          </div>
        )}

        {currentStep === 2 && (
          <div>
            <Title level={4}>B∆∞·ªõc 3: C·∫•u h√¨nh v√†o Code</Title>
            
            <Paragraph>
              M·ªü file <Text code>src/services/aiService.js</Text> v√† thay th·∫ø:
            </Paragraph>

            <Alert
              message="Gemini Setup"
              description={
                <pre style={{ background: '#f5f5f5', padding: '12px', borderRadius: '4px' }}>
{`// Thay th·∫ø d√≤ng n√†y:
const GEMINI_API_KEY = 'YOUR_GEMINI_API_KEY'

// B·∫±ng:
const GEMINI_API_KEY = 'your_actual_gemini_api_key_here'`}
                </pre>
              }
              type="success"
            />

            <div style={{ margin: '16px 0' }}>
              <Text>HO·∫∂C</Text>
            </div>

            <Alert
              message="OpenAI Setup"
              description={
                <pre style={{ background: '#f5f5f5', padding: '12px', borderRadius: '4px' }}>
{`// Thay th·∫ø d√≤ng n√†y:
const OPENAI_API_KEY = 'YOUR_OPENAI_API_KEY'

// B·∫±ng:
const OPENAI_API_KEY = 'your_actual_openai_api_key_here'`}
                </pre>
              }
              type="warning"
            />

            <Alert
              message="üîí B·∫£o m·∫≠t"
              description="Trong production, h√£y s·ª≠ d·ª•ng environment variables thay v√¨ hardcode API keys!"
              type="info"
              style={{ marginTop: 16 }}
            />
          </div>
        )}
      </div>

      <Divider />

      <Space>
        {currentStep > 0 && (
          <Button onClick={() => setCurrentStep(currentStep - 1)}>
            B∆∞·ªõc tr∆∞·ªõc
          </Button>
        )}
        {currentStep < steps.length - 1 && (
          <Button type="primary" onClick={() => setCurrentStep(currentStep + 1)}>
            B∆∞·ªõc ti·∫øp
          </Button>
        )}
        {currentStep === steps.length - 1 && (
          <Button type="primary">
            ‚úÖ Ho√†n th√†nh!
          </Button>
        )}
      </Space>
    </Card>
  )
}

export default AISetupGuide
